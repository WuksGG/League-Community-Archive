generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applications {
  id            String        @id @db.VarChar(20)
  name          String        @db.VarChar(100)
  locale        String        @db.VarChar(10)
  description   String?       @db.VarChar
  shortName     String        @db.VarChar(50)
  stickiedPosts Json?         @default("[]")
  Discussions   Discussions[]
}

model Comments {
  id          String      @db.VarChar
  threadId    String      @db.VarChar(15)
  message     String?     @db.VarChar
  userId      BigInt
  parentId    String?     @db.VarChar
  createdAt   DateTime?   @db.Timestamptz(6)
  modifiedAt  DateTime?   @db.Timestamptz(6)
  upvotes     Int?
  downvotes   Int?
  numChildren Int?
  Discussions Discussions @relation(fields: [threadId], references: [id])
  Users       Users       @relation(fields: [userId], references: [id])

  @@id([threadId, id])
  @@index([createdAt], map: "Comments_CreatedAt_Index")
}

model Discussions {
  id                String       @id @db.VarChar(15)
  title             String       @db.VarChar(300)
  applicationId     String       @db.VarChar(20)
  userId            BigInt?
  upvotes           Int?
  downvotes         Int?
  viewCount         Int?
  softComments      Int?
  totalComments     Int?
  createdAt         DateTime     @db.Timestamptz(6)
  modifiedAt        DateTime?    @db.Timestamptz(6)
  lastCommentedAt   DateTime?    @db.Timestamptz(6)
  contentType       String       @db.VarChar(30)
  content           Json?        @default("{\"body\": \"\"}")
  hasRioterComments Boolean?     @default(false)
  Applications      Applications @relation(fields: [applicationId], references: [id])
  Users             Users?       @relation(fields: [userId], references: [id])
  Comments          Comments[]
  RiotPosts         RiotPosts[]
}

model RiotPosts {
  id           Int         @id @default(autoincrement())
  commentId    String?     @db.VarChar
  discussionId String      @db.VarChar(15)
  createdAt    DateTime    @db.Timestamptz(6)
  Discussions  Discussions @relation(fields: [discussionId], references: [id])
}

model Users {
  id          BigInt        @id
  name        String?       @db.VarChar(50)
  level       Int?          @default(1)
  icon        Int           @default(0)
  region      String        @db.VarChar(5)
  isModerator Boolean       @default(false)
  isRioter    Boolean       @default(false)
  banEndsAt   DateTime?     @db.Timestamptz(6)
  modifiedAt  DateTime?     @db.Timestamptz(6)
  createdAt   DateTime      @db.Timestamptz(6)
  Comments    Comments[]
  Discussions Discussions[]
}
